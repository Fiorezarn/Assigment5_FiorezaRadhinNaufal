{
  "openapi": "3.0.3",
  "info": {
    "title": "Customer Management API",
    "version": "1.0.0",
    "description": "This API provides endpoints to manage customer data, including creating, updating, retrieving, and deleting customer information and associated orders.",
    "contact": {
      "name": "API Support",
      "email": "fiorezarn@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get All Customer",
        "description": "Get All Customer",
        "operationId": "getAllCustomer",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "integer",
                        "example": 1
                      },
                      "firstName": {
                        "type": "string",
                        "example": "Reza"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Naufal"
                      },
                      "gender": {
                        "type": "string",
                        "example": "male"
                      },
                      "birth": {
                        "type": "string",
                        "format": "date",
                        "example": "2002-02-19"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server issue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unexpected server issue"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Customer"],
        "summary": "Create Customer",
        "description": "Create Customer",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Reza"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Naufal"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "birth": {
                    "type": "string",
                    "format": "date",
                    "example": "2002-02-19"
                  }
                },
                "examples": {
                  "Create Customer": {
                    "value": {
                      "firstName": "Reza",
                      "lastName": "Naufal",
                      "gender": "male",
                      "birth": "2002-02-19"
                    }
                  },
                  "Missing Required Field": {
                    "value": {
                      "firstName": "Reza",
                      "gender": "male"
                    }
                  },
                  "Invalid Date Format": {
                    "value": {
                      "firstName": "Reza",
                      "gender": "male",
                      "birth": "19-02-2002"
                    }
                  },
                  "Unacceptable Gender Value": {
                    "value": {
                      "firstName": "Reza",
                      "gender": "unknown",
                      "birth": "2002-02-19"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Customer successfully created"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "customerId": {
                          "type": "integer",
                          "example": 1
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Reza"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Naufal"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "birth": {
                          "type": "string",
                          "format": "date",
                          "example": "2002-02-19"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing or invalid request body"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Customer already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unexpected issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get Customer by ID",
        "description": "Retrieve a specific customer by their ID",
        "operationId": "getCustomerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Customer found",
            "content": {
              "application/json": {
                "example": {
                  "message": "success get customer",
                  "data": {
                    "id": "12345",
                    "firstName": "reza",
                    "lastName": "Naufal",
                    "birth": "2002-02-19",
                    "gender": "male"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Customer"],
        "summary": "Update Customer",
        "description": "Update customer details by ID",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "birth": {
                    "type": "string",
                    "example": "2002-02-19"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "rafal"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "alqurni"
                  }
                }
              },
              "examples": {
                "Update Customer": {
                  "value": {
                    "birth": "2002-02-19",
                    "firstName": "rafal",
                    "gender": "male",
                    "lastName": "alqurni"
                  }
                },
                "Invalid Birth Date": {
                  "value": {
                    "birth": "02/19/2002",
                    "firstName": "rafal",
                    "gender": "male",
                    "lastName": "alqurni"
                  }
                },
                "Missing Last Name": {
                  "value": {
                    "birth": "2002-02-19",
                    "firstName": "rafal",
                    "gender": "male"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer successfully updated",
            "content": {
              "application/json": {
                "example": {
                  "message": "success update customer",
                  "data": {
                    "id": "12345",
                    "birth": "2002-02-19",
                    "firstName": "rafal",
                    "gender": "male",
                    "lastName": "alqurni"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid request body",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Customer"],
        "summary": "Delete Customer",
        "description": "Delete a customer by ID",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer successfully deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer successfully deleted"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/addresses": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get Customer Address",
        "description": "Get the address of a specific customer by their ID",
        "operationId": "getCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer whose address is to be retrieved",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Customer address found",
            "content": {
              "application/json": {
                "example": {
                  "message": "success get customer address",
                  "data": {
                    "id": "12345",
                    "addresses": [
                      {
                        "street": "cattleya residence",
                        "city": "Tangerang Selatan",
                        "postalCode": "15418"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer or address not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer or address not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Customer"],
        "summary": "Create Address",
        "description": "Create an address for a specific customer",
        "operationId": "createAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to create the address for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "Tangerang Selatan"
                  },
                  "postalCode": {
                    "type": "string",
                    "example": "15418"
                  },
                  "street": {
                    "type": "string",
                    "example": "cattleya residence"
                  }
                }
              },
              "examples": {
                "Create Address": {
                  "value": {
                    "city": "Tangerang Selatan",
                    "postalCode": "15418",
                    "street": "cattleya residence"
                  }
                },
                "Missing City": {
                  "value": {
                    "postalCode": "15418",
                    "street": "cattleya residence"
                  }
                },
                "Invalid Postal Code": {
                  "value": {
                    "city": "Tangerang Selatan",
                    "postalCode": "abc123",
                    "street": "cattleya residence"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address successfully created",
            "content": {
              "application/json": {
                "example": {
                  "message": "success create address",
                  "data": {
                    "id": "12345",
                    "city": "Tangerang Selatan",
                    "postalCode": "15418",
                    "street": "cattleya residence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid data",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/orders": {
      "post": {
        "tags": ["Customer"],
        "summary": "Create Order",
        "description": "Create an order for a specific customer",
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to create the order for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "completed"
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 5000
                  }
                }
              },
              "examples": {
                "Create Order": {
                  "value": {
                    "status": "completed",
                    "totalAmount": 5000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order successfully created",
            "content": {
              "application/json": {
                "example": {
                  "message": "success create order",
                  "data": {
                    "id": "order123",
                    "status": "completed",
                    "totalAmount": 5000
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid data",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/address": {
      "get": {
        "tags": ["Address"],
        "summary": "Get All Address",
        "description": "Get All Address",
        "operationId": "getAllAddress",
        "responses": {
          "200": {
            "description": "Addresses retrieved successfully.",
            "content": {
              "application/json": {
                "example": {
                  "message": "success get addresses",
                  "data": [
                    {
                      "id": "12345",
                      "city": "Tangerang Selatan",
                      "postalCode": "15418",
                      "street": "cattleya residence"
                    },
                    {
                      "id": "12346",
                      "city": "Jakarta Selatan",
                      "postalCode": "12110",
                      "street": "sudirman street"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. There was an error retrieving the address data.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/address/{id}": {
      "delete": {
        "tags": ["Address"],
        "summary": "Delete Address",
        "description": "Delete an address by ID",
        "operationId": "deleteAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the address to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Address deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found. The specified ID does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Address not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "The address with the specified ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. There was an error deleting the address data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "There was an error deleting the address data."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Address"],
        "summary": "Update Address",
        "description": "Update an address by ID",
        "operationId": "updateAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the address to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "Tangerang Selatan"
                  },
                  "custId": {
                    "type": "number",
                    "example": 2
                  },
                  "postalCode": {
                    "type": "string",
                    "example": "15418"
                  },
                  "street": {
                    "type": "string",
                    "example": "cattleya mawar"
                  }
                }
              },
              "examples": {
                "Update Address": {
                  "value": {
                    "city": "Tangerang Selatan",
                    "custId": 2,
                    "postalCode": "15418",
                    "street": "cattleya mawar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Address updated successfully."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found. The specified ID does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Address not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "The address with the specified ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. There was an error updating the address data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "There was an error updating the address data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": ["Order"],
        "summary": "Get All Orders",
        "description": "Retrieve a list of all orders",
        "operationId": "getAllOrder",
        "responses": {
          "200": {
            "description": "List of all orders retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "integer",
                            "example": 1
                          },
                          "customerName": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "totalAmount": {
                            "type": "number",
                            "example": 150.75
                          },
                          "status": {
                            "type": "string",
                            "example": "Completed"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-11-12T10:20:30Z"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Orders retrieved successfully."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. There was an error retrieving the orders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "There was an error retrieving the order data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order/{id}": {
      "put": {
        "tags": ["Order"],
        "summary": "Update Order",
        "description": "Update an order by ID",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the order to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "pending"
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 5000
                  }
                }
              },
              "examples": {
                "Update Order": {
                  "value": {
                    "status": "pending",
                    "totalAmount": 5000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order updated successfully."
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "orderId": {
                          "type": "integer",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "pending"
                        },
                        "totalAmount": {
                          "type": "number",
                          "example": 5000
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-11-12T10:20:30Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found. The specified ID does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Order not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "The order with the specified ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. There was an error updating the order data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "There was an error updating the order data."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Order"],
        "summary": "Delete Order",
        "description": "Delete an order by ID",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the order to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found. The specified ID does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Order not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "The order with the specified ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. There was an error deleting the order data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "There was an error deleting the order data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "cs_id": { "type": "integer" },
          "cs_firstname": { "type": "string" },
          "cs_lastname": { "type": "string" },
          "cs_gender": { "type": "string" },
          "cs_birth": { "type": "string", "format": "date" },
          "cs_status": { "type": "boolean" },
          "is_active": { "type": "boolean" }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "ct_id": { "type": "integer" },
          "ct_phoneNumber": { "type": "string" },
          "ct_email": { "type": "string" },
          "ct_cs_id": { "type": "integer" },
          "ct_type": { "type": "string", "enum": ["primary", "secondary"] }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "ad_id": { "type": "integer" },
          "ad_street": { "type": "string" },
          "ad_city": { "type": "string" },
          "ad_postalCode": { "type": "string" },
          "ad_cs_id": { "type": "integer" }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "or_id": { "type": "integer" },
          "or_date": { "type": "string", "format": "date-time" },
          "or_totalAmount": { "type": "number" },
          "or_status": {
            "type": "string",
            "enum": ["pending", "completed", "canceled"]
          },
          "or_cs_id": { "type": "integer" }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Customer"
    },
    {
      "name": "Address"
    },
    {
      "name": "Order"
    }
  ]
}
