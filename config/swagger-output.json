{
  "openapi": "3.0.3",
  "info": {
    "title": "Customer Management API",
    "version": "1.0.0",
    "description": "This API provides endpoints to manage customer data, including creating, updating, retrieving, and deleting customer information and associated orders.",
    "contact": {
      "name": "API Support",
      "email": "fiorezarn@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get All Customer",
        "description": "Get All Customer",
        "operationId": "getAllCustomer",
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "500": {
            "description": "Internal Server Error - Unexpected server issue"
          }
        }
      },
      "post": {
        "tags": ["Customer"],
        "summary": "Create Customer",
        "description": "Create Customer",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "birth": {
                    "type": "string",
                    "example": "2002-02-19"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "reza"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Naufal"
                  }
                }
              },
              "examples": {
                "Create Customer": {
                  "value": {
                    "birth": "2002-02-19",
                    "firstName": "reza",
                    "gender": "male",
                    "lastName": "Naufal"
                  }
                },
                "Missing Required Field": {
                  "value": {
                    "birth": "2002-02-19",
                    "firstName": "reza",
                    "gender": "male"
                  }
                },
                "Invalid Date Format": {
                  "value": {
                    "birth": "19-02-2002",
                    "firstName": "reza",
                    "gender": "male",
                    "lastName": "Naufal"
                  }
                },
                "Unacceptable Gender Value": {
                  "value": {
                    "birth": "2002-02-19",
                    "firstName": "reza",
                    "gender": "unknown",
                    "lastName": "Naufal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer successfully created"
          },
          "400": {
            "description": "Bad Request - Missing or invalid request body"
          },
          "409": {
            "description": "Conflict - Customer already exists"
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get Customer by ID",
        "description": "Retrieve a specific customer by their ID",
        "operationId": "getCustomerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Customer found",
            "content": {
              "application/json": {
                "example": {
                  "message": "success get customer",
                  "data": {
                    "id": "12345",
                    "firstName": "reza",
                    "lastName": "Naufal",
                    "birth": "2002-02-19",
                    "gender": "male"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Customer"],
        "summary": "Update Customer",
        "description": "Update customer details by ID",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "birth": {
                    "type": "string",
                    "example": "2002-02-19"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "rafal"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "alqurni"
                  }
                }
              },
              "examples": {
                "Update Customer": {
                  "value": {
                    "birth": "2002-02-19",
                    "firstName": "rafal",
                    "gender": "male",
                    "lastName": "alqurni"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer successfully updated",
            "content": {
              "application/json": {
                "example": {
                  "message": "success update customer",
                  "data": {
                    "id": "12345",
                    "birth": "2002-02-19",
                    "firstName": "rafal",
                    "gender": "male",
                    "lastName": "alqurni"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid request body"
          },
          "404": {
            "description": "Not Found - Customer not found"
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue"
          }
        }
      },
      "patch": {
        "tags": ["Customer"],
        "summary": "Delete Customer",
        "description": "Delete a customer by ID",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer successfully deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer successfully deleted"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/addresses": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get Customer Address",
        "description": "Get the address of a specific customer by their ID",
        "operationId": "getCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer whose address is to be retrieved",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Customer address found",
            "content": {
              "application/json": {
                "example": {
                  "message": "success get customer address",
                  "data": {
                    "id": "12345",
                    "addresses": [
                      {
                        "street": "cattleya residence",
                        "city": "Tangerang Selatan",
                        "postalCode": "15418"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer or address not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer or address not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Customer"],
        "summary": "Create Address",
        "description": "Create an address for a specific customer",
        "operationId": "createAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to create the address for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "Tangerang Selatan"
                  },
                  "postalCode": {
                    "type": "string",
                    "example": "15418"
                  },
                  "street": {
                    "type": "string",
                    "example": "cattleya residence"
                  }
                }
              },
              "examples": {
                "Create Address": {
                  "value": {
                    "city": "Tangerang Selatan",
                    "postalCode": "15418",
                    "street": "cattleya residence"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address successfully created",
            "content": {
              "application/json": {
                "example": {
                  "message": "success create address",
                  "data": {
                    "id": "12345",
                    "city": "Tangerang Selatan",
                    "postalCode": "15418",
                    "street": "cattleya residence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid data"
          },
          "404": {
            "description": "Not Found - Customer not found"
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue"
          }
        }
      }
    },
    "/customers/{id}/orders": {
      "post": {
        "tags": ["Customer"],
        "summary": "Create Order",
        "description": "Create an order for a specific customer",
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the customer to create the order for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "completed"
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 5000
                  }
                }
              },
              "examples": {
                "Create Order": {
                  "value": {
                    "status": "completed",
                    "totalAmount": 5000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order successfully created",
            "content": {
              "application/json": {
                "example": {
                  "message": "success create order",
                  "data": {
                    "id": "order123",
                    "status": "completed",
                    "totalAmount": 5000
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid data",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected issue",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },

    "/address": {
      "get": {
        "tags": ["Address"],
        "summary": "Get All Address",
        "description": "Get All Address",
        "operationId": "getAllAddress",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/address/1": {
      "delete": {
        "tags": ["Address"],
        "summary": "Delete Address",
        "description": "Delete Address",
        "operationId": "deleteAddress",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/address/2": {
      "put": {
        "tags": ["Address"],
        "summary": "Update Address",
        "description": "Update Address",
        "operationId": "updateAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "Tangerang Selatan"
                  },
                  "custId": {
                    "type": "number",
                    "example": 2
                  },
                  "postalCode": {
                    "type": "string",
                    "example": "15418"
                  },
                  "street": {
                    "type": "string",
                    "example": "cattleya mawar"
                  }
                }
              },
              "examples": {
                "Update Address": {
                  "value": {
                    "city": "Tangerang Selatan",
                    "custId": 2,
                    "postalCode": "15418",
                    "street": "cattleya mawar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": ["Order"],
        "summary": "Get All Order",
        "description": "Get All Order",
        "operationId": "getAllOrder",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },

    "/order/1": {
      "put": {
        "tags": ["Order"],
        "summary": "Update Order",
        "description": "Update Order",
        "operationId": "updateOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "pending"
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 5000
                  }
                }
              },
              "examples": {
                "Update Order": {
                  "value": {
                    "status": "pending",
                    "totalAmount": 5000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/order/2": {
      "delete": {
        "tags": ["Order"],
        "summary": "Delete Order",
        "description": "Delete Order",
        "operationId": "deleteOrder",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Customer"
    },
    {
      "name": "Address"
    },
    {
      "name": "Order"
    }
  ]
}
